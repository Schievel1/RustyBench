# first make a release, then this will run and make a statically linked musl binary and attach it to the
# latest release tag
# Set the permissions for the github token to permissive in the repos settings!
#
name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
    
  workflow_dispatch:
  
permissions: write-all

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:       
  macos:
    name: macos
    runs-on: macos-11

    steps:
      - name: Fetch release version
        run: |
          echo "latest_tag=$(\
          curl -sL https://api.github.com/repos/Schievel1/RustyBench/releases/latest | \
          jq -r ".tag_name")" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Install ARM target
        run: rustup update && rustup target add aarch64-apple-darwin
      - name: Build ARM
        run: cargo build --release --target=aarch64-apple-darwin
      - name: rename executeable
        run: |
          cp ./target/aarch64-apple-darwin/release/rusty_bench ./rusty_bench-macos-aarch64-${{ env.latest_tag }}
      - uses: actions/upload-artifact@v3
        with:
          name: rusty_bench-macos-aarch64-${{ env.latest_tag }}
          path: ./rusty_bench-macos-aarch64-${{ env.latest_tag }}
  intel-macos:
    name: intel-macos
    runs-on: macos-11

    steps:
      - name: Fetch release version
        run: |
          echo "latest_tag=$(\
          curl -sL https://api.github.com/repos/Schievel1/RustyBench/releases/latest | \
          jq -r ".tag_name")" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --release
      - name: rename executeable
        run: |
          cp ./target/release/rusty_bench ./rusty_bench-macos-x86_64-${{ env.latest_tag }}
      - uses: actions/upload-artifact@v3
        with:
          name: rusty_bench-macos-x86_64-${{ env.latest_tag }}
          path: ./rusty_bench-macos-x86_64-${{ env.latest_tag }}
  windows:
    name: windows
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Fetch release version
        run: |
          echo "latest_tag=$(\
          curl -sL https://api.github.com/repos/Schievel1/RustyBench/releases/latest | \
          jq -r ".tag_name")" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --release
      - name: rename executeable
        run: |
          cp ./target/release/rusty_bench.exe ./rusty_bench-windows-x86_64-${{ env.latest_tag }}.exe
      - uses: actions/upload-artifact@v3
        with:
          name: rusty_bench-windows-x86_64-${{ env.latest_tag }}.exe
          path: ./rusty_bench-windows-x86_64-${{ env.latest_tag }}.exe

  # sadly musl build will not work due to openssl. Try it regardless
  # build for ubuntu at least to cover common linux use case
  linux:
    name: linux
    runs-on: ubuntu-latest

    steps:
      - name: Fetch release version
        run: |
          echo "latest_tag=$(\
          curl -sL https://api.github.com/repos/Schievel1/RustyBench/releases/latest | \
          jq -r ".tag_name")" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: install dependencies 
        run: |
          sudo apt-get install librust-atk-dev libgtk-3-dev
#      - name: Install musl dependencies
#        run: |
#          sudo apt-get install musl musl-dev musl-tools clang lld
#      - name: Install musl target
#        run: rustup update && rustup target add x86_64-unknown-linux-musl
      - name: Build x86_64
        run: cargo build --release #--target=x86_64-unknown-linux-musl
      - name: rename executeables
        run: |
          cp ./target/release/rusty_bench ./rusty_bench-linux-x86_64-ubuntu-${{ env.latest_tag }}
      - uses: actions/upload-artifact@v3
        with:
          name: rusty_bench-linux-x86_64-ubuntu-${{ env.latest_tag }}
          path: ./rusty_bench-linux-x86_64-ubuntu-${{ env.latest_tag }}
          
  make-release:
    permissions: write-all
    if: ${{ always() }}
    needs: [linux, windows, macos, intel-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Fetch release version
      run: |
          echo "latest_tag=$(\
          curl -sL https://api.github.com/repos/Schievel1/RustyBench/releases/latest | \
          jq -r ".tag_name")" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
    - name: Display structure of downloaded files
      run: ls -R
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.latest_tag }}
          prerelease: false
          files: |
            ./rusty_bench-linux-x86_64-ubuntu-${{ env.latest_tag }}
            ./rusty_bench-windows-x86_64-${{ env.latest_tag }}.exe
            ./rusty_bench-macos-aarch64-${{ env.latest_tag }}
            ./rusty_bench-macos-x86_64-${{ env.latest_tag }}
